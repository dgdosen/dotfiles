set -g default-shell /bin/zsh
# set -g default-shell /opt/homebrew/bin/fish

set -g set-clipboard on

# Setting the prefix from C-b to C-a
# START:prefix
# change
set -g prefix C-a
# END:prefix

# Free the original Ctrl-b prefix keybinding
# START:unbind
unbind C-b
# END:unbind

#setting the delay between prefix and command
# START:delay
set -s escape-time 1
# END:delay
# Ensure that we can send Ctrl-A to other apps
# START:bind_prefix
bind C-a send-prefix
# END:bind_prefix

# Set the base index for windows to 1 instead of 0
# START:index
set -g base-index 1
# END:index

# Set the base index for panes to 1 instead of 0
# START:panes_index
setw -g pane-base-index 1
# END:panes_index

# Reload the file with Prefix r
# START:reload
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# END:reload

# splitting panes
# START:panesplit
bind | split-window -h
bind - split-window -v
# END:panesplit

#pane navigation
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Pane resizing
# START:paneresize
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# END:paneresize
# mouse support - set to on if you want to use the mouse
# START:mouse
# setw -g mode-mouse on
# # END:mouse
# set -g mouse-select-pane off
# set -g mouse-resize-pane off
# set -g mouse-select-window off
set -g mouse on

# START:termcolor
set -g default-terminal "screen-256color"
# tell Tmux that outside terminal supports true color
# set -ga terminal-overrides ",xterm-256color*:Tc"
# Set the default terminal mode to 256color mode
set-option -sa terminal-overrides ',alacritty:RGB'

# END:termcolor

# enable activity alerts
#START:activity
setw -g monitor-activity off
set -g visual-activity on
#END:activity

# # START:panecolors
# # config changing with tmux 2.1?
# # set -g pane-active-border-style 'fg=yellow bg=colour242'
# # set -g window-active-style 'bg=colour235'
# set -g pane-active-border-bg colour214
# set -g pane-active-border-fg brightgreen
# # set -g window-active-style 'bg=colour235'
# # set -g window-active-style 'fg=default, bg=default'

# END:panecolors

# Command / message line

#END:utf8

# enable vi keys.
# START:vikeys
setw -g mode-keys vi
# END:vikeys

unbind C-Up
unbind C-Down

set -g default-shell $SHELL

# TODO: this was removed for xplatform work. is this legacy support for
# copy/paste
# bind-key -Tcopy-mode-vi 'v' send -X begin-selection

# TODO: is reattach-to-user-namepsce still required?
set-option -g default-command "reattach-to-user-namespace -l $SHELL"
# if-shell -b '[ "$(echo "`uname` = Darwin" | bc)" = 1]'  \
#   echo 'on darwin tmux.conf' \
#   set -g default-command "reattach-to-user-namespace -l ${SHELL}" \
#   bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace
#   pbcopy" \

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"# List of plugins

bind-key -r i run-shell "tmux neww ~/.dotfiles/.zsh_customizations/tmux-sessionizer.sh"
bind-key -r S run-shell "~/.dotfiles/.zsh_customizations/tmux-sessionizer.sh"


# WIP: getting rid of tpm - is this really needed with tmux 2.4?
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'egel/tmux-gruvbox'
# set -g @plugin "janoamaral/tokyo-night-tmux"
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-gruvbox'
# set -g @plugin 'tmux-plugins/tmux-continum'
# set -g @plugin 'NHDaly/tmux-scroll-copy-mode'

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'
bind C-x clear-history

# tmux continum
set -g @continuum-restore 'on'

# run '~/.tmux/plugins/tpm/tpm'

# source conf file with theme:
# source ~/Library/Python/2.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf
# source ~/.tmux/.tmux-theme-gruvbox.conf
# source ~/.tmux/tmux-gruvbox-dark.conf
# source ~/.tmux/tmux-gruvbox-light.conf
# source ~/.tmux-theme-gruvbox.conf
# set -g @tmux-gruvbox 'dark'
# set -g @plugin 'egel/tmux-gruvbox'
# set -g @tmux-gruvbox 'light'

# or my custom gruvbox dark:
source ~/.tmux/.tmux-theme-gruvbox.conf


# edit your tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key M split-window -h "nvim ~/.tmux.conf"
# bind-key Z split-window -h "nvim ~/.vim_nvim/config/general.vimrc

run -b '~/.tmux/plugins/tpm/tpm'
run-shell ~/.tmux/plugins/tmux-yank/yank.tmux
set-environment -gu RBENV_VERSION

set-option -g focus-events on
